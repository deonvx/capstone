version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.5
  python: circleci/python@2.1.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  lint:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt

      - run:
          command: |
            pylint --disable=R,C,W1203,W1202 src/app.py
          name: Lint code
  build-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t capstone .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Build docker image
          command: |
            docker build -t capstone .
      - run: 
          name: run docker 
          command: |
            docker run -itd capstone
      - run:
          name: tag image 
          command: |
            docker tag capstone $DOCKER_USER/capstone:<< pipeline.id >>
      - run:
          name: docker login and push image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_USER/capstone:<< pipeline.id >>

  deploy-k8s:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: uda-k8s
      - run:
          command: |
            kubectl get nodes

          name: Test cluster
      - run:
          name: update image tag
          command: |
            sed -ie "s/{tag}/<< pipeline.id >>/g" deployment/deployment.yaml
            sed -ie "s/{image}/${DOCKER_USER}\/capstone/g" deployment/deployment.yaml
      - run:
          name: deploy new image tag
          command: |
            kubectl apply -f deployment/deployment.yaml

workflows:
  default:
    jobs:
      - lint
      - build-image:
          requires: [lint]
      - deploy-k8s:
          requires: [build-image]